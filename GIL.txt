python里的多线程是假的
一个线程在做时，另一个在休息，GIL保证同一时刻只有一个线程在执行
只有多进程才能实现并发

计算密集型程序：进程实现，可发挥多核CPU的优势

IO密集型程序：线程、协程

1.python语言和GIL，没有关系。仅仅是Cpython难以移除GIL
2.每个线程在执行时都需要获取GIL，保证同一时刻只有一个线程在执行
3.线程释放GIL的情况：在IO等可能引起阻塞的系统调用之前，可以暂时释放GIL。但执行完毕后，必须重新获取GIL
4.python使用多进程可以使用多核CPU的资源
5.多线程爬取比单线程性能有提升，因为遇到IO阻塞会自动释放GIL锁

解决GIL的方法：
1.换python解释器，不用cpython
2.用其他语言编写的程序替代python程序中线程执行的部分(python是一门胶水语言)

from ctypes import *
from threading import Thread

# 加载动态库
lib = cdll.LoadLibrary("./dyfile_name.so")

# 创建并执行线程
t = Thread(target=lib.DeadLoop)
t.start()